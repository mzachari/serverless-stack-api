# NOTE: update this with your service name
service: notes-app-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-south-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #

  # These environment variables are made available to our functions
 # under process.env.
environment:
  tableName: notes
  
resources:
  - ${file(resources/api-gateway-errors.yml)}

# 'iamRoleStatements' defines the permission policy for the Lambda function.
# In this case Lambda functions are granted with permissions to access DynamoDB.

iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:ap-south-1:*:*"
functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: 
            arn: arn:aws:cognito-idp:ap-south-1:925516598557:userpool/ap-south-1_487tj7mc9
  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: 
            arn: arn:aws:cognito-idp:ap-south-1:925516598557:userpool/ap-south-1_487tj7mc9
  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: 
            arn: arn:aws:cognito-idp:ap-south-1:925516598557:userpool/ap-south-1_487tj7mc9